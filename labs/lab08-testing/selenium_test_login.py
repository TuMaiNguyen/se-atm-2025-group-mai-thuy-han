# labs/lab08-testing/selenium_test_login.py
import os, time, pytest
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from webdriver_manager.chrome import ChromeDriverManager

def make_driver():
    opts = Options()
    opts.add_argument("--headless=new")
    opts.add_argument("--no-sandbox")
    opts.add_argument("--disable-dev-shm-usage")
    driver = webdriver.Chrome(ChromeDriverManager().install(), options=opts)
    driver.set_window_size(1280, 900)
    return driver

def goto_login(driver):
    # N·∫øu ƒë√£ c√≥ GitHub Pages cho Lab04, ƒë·ªïi LOGIN_URL cho ph√π h·ª£p:
    url = os.getenv("LOGIN_URL", "http://localhost:8000/docs/lab04/")
    driver.get(url)
    time.sleep(0.üòé

def fill_and_submit(driver, username, password, remember=False):
    # CH√ö √ù: N·∫øu form c·ªßa nh√≥m d√πng id/selector kh√°c, s·ª≠a 4 d√≤ng d∆∞·ªõi cho kh·ªõp
    user = driver.find_element(By.CSS_SELECTOR, "#username, input[name='username']")
    pwd  = driver.find_element(By.CSS_SELECTOR, "#password, input[name='password']")
    if remember:
        try:
            driver.find_element(By.CSS_SELECTOR, "#rememberMe, input[type='checkbox']").click()
        except Exception:
            pass
    driver.find_element(By.CSS_SELECTOR, "#loginBtn, button[type='submit']").click()
    # n·∫øu n√∫t submit kh√¥ng t·ª± g·ª≠i, th√¨ nh·∫≠p tr∆∞·ªõc r·ªìi click submit:
    try:
        user.clear(); user.send_keys(username)
        pwd.clear();  pwd.send_keys(password)
        driver.find_element(By.CSS_SELECTOR, "#loginBtn, button[type='submit']").click()
    except Exception:
        pass
    time.sleep(0.üòé

def get_message(driver):
    # S·ª≠a selector cho ƒë√∫ng v√πng th√¥ng b√°o c·ªßa form (v√≠ d·ª• #message)
    try:
        el = driver.find_element(By.CSS_SELECTOR, "#message, .toast, .alert")
        return el.text.strip().lower()
    except Exception:
        return driver.page_source.lower()

@pytest.fixture
def driver():
    d = make_driver()
    try:
        yield d
    finally:
        d.quit()

def test_login_success(driver):
    goto_login(driver)
    fill_and_submit(driver, "admin", "123456", remember=True)
    msg = get_message(driver)
    assert ("success" in msg) or ("ƒëƒÉng nh·∫≠p th√†nh c√¥ng" in msg)

def test_login_wrong(driver):
    goto_login(driver)
    fill_and_submit(driver, "admin", "sai_pass")
    msg = get_message(driver)
    assert ("invalid" in msg) or ("sai" in msg) or ("kh√¥ng ƒë√∫ng" in msg)

def test_login_empty(driver):
    goto_login(driver)
    fill_and_submit(driver, "", "")
    msg = get_message(driver)
    assert ("required" in msg) or ("vui l√≤ng" in msg) or ("kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng" in msg)
